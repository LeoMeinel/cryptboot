#!/bin/bash
###
# File: cryptboot
# Author: Leopold Meinel (leo@meinel.dev)
# -----
# Copyright (c) 2023 Leopold Meinel & contributors
# SPDX ID: GPL-3.0-or-later
# URL: https://www.gnu.org/licenses/gpl-3.0-standalone.html
# -----
###

# Check if user is root
if [[ $UID -ne 0 ]]; then
    echo "Permission denied (you must be root)"
    exit 1
fi

# Default config
BOOT_DIR="/boot"
EFI_DIR="/efi"
EFI_PATH="EFI/GRUB/grubx64.efi"
ADDITIONAL_EFI_PATH=("EFI/BOOT/BOOTX64.EFI")

# Load config file
if [[ -f "/etc/cryptboot.conf" ]]; then
    source "/etc/cryptboot.conf"
else
    echo "/etc/cryptboot.conf doesn't exist!"
    exit
fi

# Get path to cryptboot-efikeys executable
EFIKEYS_BIN="$(which cryptboot-efikeys 2>/dev/null)"

# Check if /boot mountpoint exists
if ! findmnt -sn "$BOOT_DIR" &>/dev/null; then
    echo "Couldn't find boot partition mountpoint '$BOOT_DIR', check your /etc/fstab"
    exit 1
fi

# Check if /boot/efi mountpoint exists
if ! findmnt -sn "$EFI_DIR" &>/dev/null; then
    echo "Couldn't find EFI System partition mountpoint '$EFI_DIR', check your /etc/fstab"
    exit 1
fi

# Main program
case "$1" in
systemd-boot-sign)
    echo "Signing kernel with UEFI secure boot keys..."
    "$EFIKEYS_BIN" sign "$EFI_DIR/$EFI_PATH"
    for path in ${ADDITIONAL_EFI_PATH[@]}; do
        if [[ -f "$EFI_DIR/$path" ]]; then
            "$EFIKEYS_BIN" sign "$EFI_DIR/$path"
        fi
    done

    sync
    ;;
*)
    echo "Usage: $(basename "$0") {systemd-boot-sign|upgrade}"
    echo
    echo "Encrypted boot partition manager with UEFI Secure Boot support"
    echo
    echo "Commands:"
    echo "    systemd-boot-sign  Sign kernel with UEFI secure boot keys"
    ;;
esac
